[versions]
agp = "8.8.0" # 안드로이드 그래들 플러그인 버전
kotlin = "2.0.21" # 코틀린 버전
coreKtx = "1.16.0" # 코어 KTX 버전
junit = "4.13.2" # JUnit 4 버전
junitVersion = "1.2.1" # AndroidX JUnit 확장 버전
espressoCore = "3.6.1" # Espresso 코어 버전
appcompat = "1.7.0" # AppCompat 라이브러리 버전
# 코루틴 버전 - 사용자 제공 (1.10.2는 최신 개발 버전일 수 있습니다. 안정 버전 확인 권장)
kotlinxCoroutinesAndroid = "1.10.2"
# Lifecycle 관련 라이브러리 버전
lifecycleViewmodelKtx = "2.8.7"
material = "1.12.0" # 머티리얼 디자인 라이브러리 버전
activity = "1.10.1" # Activity 라이브러리 버전
constraintlayout = "2.2.1" # ConstraintLayout 버전
# 추가: Fragment 버전 (Activity와 맞춤)
fragmentKtx = "1.8.2" # activity 1.10.1 과 호환되는 최신 fragment 버전 확인 필요 (1.8.2는 예시)
# 추가: Coroutines Core 버전 (Android와 맞춤)
kotlinxCoroutinesCore = "1.10.2" # Android 버전과 동일하게 설정

[libraries]
# Activity 라이브러리 (KTX 포함)
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "activity" }
# 코어 KTX 라이브러리
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
# Lifecycle LiveData KTX 라이브러리
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycleViewmodelKtx" }
# Lifecycle Runtime KTX 라이브러리 (lifecycleScope)
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleViewmodelKtx" }
# Lifecycle Service 라이브러리
androidx-lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "lifecycleViewmodelKtx" }
# Lifecycle ViewModel KTX 라이브러리
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleViewmodelKtx" }
# Lifecycle 컴파일러 (kapt 또는 implementation) - 추가됨
androidx-lifecycle-compiler = { module = "androidx.lifecycle:lifecycle-compiler", version.ref = "lifecycleViewmodelKtx" }
# JUnit 4 라이브러리
junit = { group = "junit", name = "junit", version.ref = "junit" }
# AndroidX JUnit 확장 라이브러리
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
# Espresso 코어 라이브러리
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
# AppCompat 라이브러리
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
# Kotlin Coroutines Android 라이브러리
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }
# Kotlin Coroutines Core 라이브러리 - 추가됨
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
# 머티리얼 디자인 라이브러리
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
# Activity 라이브러리 (base) - 필요시 사용
# androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
# Fragment KTX 라이브러리 - 추가됨
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }
# ConstraintLayout 라이브러리
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }

[plugins]
# 안드로이드 애플리케이션 그래들 플러그인
android-application = { id = "com.android.application", version.ref = "agp" }
# 코틀린 안드로이드 그래들 플러그인
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }